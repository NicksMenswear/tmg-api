name: _unit_tests

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        description: SHA, branch or tag to checkout
      short:
        required: false
        type: boolean
        default: false
        description: Run limited set of tests
      

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "."
          version: "~= 22.0"

  unit-test:
    runs-on: ubuntu-latest
    if: ${{ !inputs.short }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and run API tests
        run: ./test-integration.sh

      - name: Clean up
        if: always()
        run: docker-compose down

  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Smoke test by starting test db, app and simple test
        run: ./test-smoke.sh

      - name: Clean up
        if: always()
        run: docker-compose down

  gate:  # name dependency in "on-pull-reqest-comment.yml"
    runs-on: ubuntu-latest
    needs: [ lint, unit-test, smoke-test ]
    if: ${{ always() }}
    steps:
      - run: |
          echo '${{ toJSON(needs) }}'  # easier debug
          ! ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
