name: on-pull-request-comment

on:
  issue_comment:
    types: [created]

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions: 
  id-token: write
  contents: write
  pull-requests: write

jobs:
  report-start:
    if: ${{ github.event.issue.pull_request != '' && contains(github.event.comment.body, '/e2e') }}
    runs-on: ubuntu-latest
    steps:
      - name: Update PR status
        uses: teamniteo/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ github.event.issue.number }}
          state: pending
          repository: ${{ github.repository }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          description: "An example description"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  wait-for-ci:
    if: ${{ github.event.issue.pull_request != '' && contains(github.event.comment.body, '/e2e') }}
    runs-on: ubuntu-latest
    needs: report-start
    steps:
      - name: Wait for CI gate to succeed
        uses: fountainhead/action-wait-for-check@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.sha }}
          checkName: "on-pull-request / ci / gate"

  cd:
    if: ${{ github.event.issue.pull_request != '' && contains(github.event.comment.body, '/e2e') }}
    uses: ./.github/workflows/_sls_deploy.yml
    needs: wait-for-ci
    with:
      ref: ${{ github.head_ref }}
      stage: dev
      notify: false
  
  e2e:
    if: ${{ github.event.issue.pull_request != '' && contains(github.event.comment.body, '/e2e') }}
    uses: ./.github/workflows/_e2e_tests.yml
    needs: cd
    with:
      ref: ${{ github.head_ref }}
      stage: dev
      notify: false

  report-complete:
    if: ${{ always() && github.event.issue.pull_request != '' && contains(github.event.comment.body, '/e2e') }}
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - name: Update PR status
        uses: teamniteo/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ github.event.issue.number }}
          state: ${{ job.status }}
          repository: ${{ github.repository }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          description: "An example description"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


