name: on-pull-request-comment

on:
  issue_comment:
    types:
      - created

concurrency:
  group: ${{ github.workflow }}-dev
  cancel-in-progress: false

permissions: 
  id-token: write
  contents: write
  pull-requests: write
  statuses: write
  checks: read

jobs:
  report-start-cd:
    if: ${{ github.event.issue.pull_request != '' && contains(github.event.comment.body, '/cd') }}
    runs-on: ubuntu-latest
    steps:
      - name: Update PR status
        uses: teamniteo/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ github.event.issue.number }}
          state: pending
          repository: ${{ github.repository }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          context: "on-pull-request-comment / cd"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  report-start-e2e:
    if: ${{ github.event.issue.pull_request != '' && contains(github.event.comment.body, '/e2e') }}
    runs-on: ubuntu-latest
    steps:
      - name: Update PR status
        uses: teamniteo/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ github.event.issue.number }}
          state: pending
          repository: ${{ github.repository }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          context: "on-pull-request-comment / e2e"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  await-ci:
    if: ${{ github.event.issue.pull_request != '' && (contains(github.event.comment.body, '/cd') || contains(github.event.comment.body, '/e2e')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI gate status
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-gate
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/pull/${{ github.event.issue.number }}/head
          checkName: "ci / gate"
      
      - name: Assert CI gate status
        run: ${{ steps.wait-for-gate.outputs.conclusion == 'success' }}

  cd:
    if: ${{ github.event.issue.pull_request != '' && contains(github.event.comment.body, '/cd') }}
    uses: ./.github/workflows/_sls_deploy.yml
    needs: await-ci
    with:
      ref: refs/pull/${{ github.event.issue.number }}/head
      stage: dev
      url: https://github.com/${{ github.repository }}/pull/${{ github.event.issue.number }}
      notify: false

  report-cd:
    if: ${{ always() && github.event.issue.pull_request != '' && contains(github.event.comment.body, '/cd') }}
    runs-on: ubuntu-latest
    needs: cd
    steps:
      - name: Update PR status
        uses: teamniteo/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ github.event.issue.number }}
          state: ${{ needs.cd.result == 'success' && 'success' || 'failure'}}
          repository: ${{ github.repository }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          context: "on-pull-request-comment / cd"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  e2e-groups:
    if: ${{ always() && github.event.issue.pull_request != '' && contains(github.event.comment.body, '/e2e') && (needs.cd.result == 'skipped' || needs.cd.result == 'success')  }}
    needs: cd
    name: e2e-groups
    uses: ./.github/workflows/_e2e_tests.yml
    with:
      ref: refs/pull/${{ github.event.issue.number }}/head
      stage: dev
      notify: false
    secrets:
      X_API_ACCESS_TOKEN: ${{ secrets.X_API_ACCESS_TOKEN }}

  report-e2e:
    if: ${{ always() && github.event.issue.pull_request != '' && contains(github.event.comment.body, '/e2e') }}
    runs-on: ubuntu-latest
    needs:
      - e2e-groups
    steps:
      - name: Update PR status
        uses: teamniteo/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ github.event.issue.number }}
          state: ${{ needs.e2e-groups.result == 'success' && 'success' || 'failure' }}
          repository: ${{ github.repository }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          context: "on-pull-request-comment / e2e"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

