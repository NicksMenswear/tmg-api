name: run-release-prd
run-name: ${{ inputs.semver }}

on:
  workflow_dispatch:
    inputs:
      semver:
        type: string
        description: semver
        required: true

concurrency:
  group: ${{ github.workflow }}-prd
  cancel-in-progress: false

permissions: 
  id-token: write
  statuses: write

jobs:
  validate-stg-release:
    runs-on: ubuntu-latest
    steps:
      - name: Verfify CI status of the stg release
        run: |
          status=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/${{ github.repository }}/commits/${{ inputs.semver }}/status)
          echo "status_code=$status" >> GITHUB_OUTPUT

      - name: Ensure stage tag exists and has success status
        run: |
          status_code="${{ steps.get_ci_status.outputs.status_code }}"
          if [[ $status_code != "200" ]]; then
            echo "Staging tag ${{ github.ref_name }} doesn't exist or has no CI status."
            exit 1
          fi

          if [[ $status_code != "success" ]]; then
            echo "Staging tag ${{ github.ref_name }} does not have success CI status."
            exit 1
          fi

  cd:
    uses: ./.github/workflows/_sls_deploy.yml
    needs: validate-stg-release
    with:
      ref: ${{ github.sha }}
      stage: dev
      release_semver: ${{ inputs.semver }}
      notify: false
    secrets:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  e2e:
    uses: ./.github/workflows/_e2e_tests.yml
    needs: cd
    with:
      ref: ${{ github.ref_name }}
      stage: dev
      notify: false
    secrets:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  release-status:
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - name: Set commit status
        uses: ouzi-dev/commit-status-updater@v2
        with:
          name: "run-release-prd / e2e"
          url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          status: "${{ needs.e2e.result == 'success' && 'success' || 'failure' }}"