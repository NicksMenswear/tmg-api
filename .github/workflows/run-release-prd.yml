name: run-release-prd
run-name: ${{ inputs.semver }}

on:
  workflow_dispatch:
    inputs:
      semver:
        type: string
        description: semver
        required: true

concurrency:
  group: ${{ github.workflow }}-prd
  cancel-in-progress: false

jobs:
  validate-release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      statuses: read
    steps:
      - name: Validate semver
        run: |
          if [[ ! ${{ inputs.semver }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid semver: ${{ inputs.semver }}"
            exit 1
          fi
      
      - name: Verify GitHub release E2E status
        id: get-release-hash
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: "${{ inputs.semver }}"
            });
            if (!release) {
              core.setFailed(`Release ${{ inputs.semver }} does not exist.`);
            }
            console.log(`Release SHA: ${release.data.target_commitish}`);

            const response = await github.rest.repos.listCommitStatusesForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "release.data.target_commitish"
            });
            console.log(`Commit statuses: ${status.data.statuses}`);

            const e2e = response.data.find(status => status.context === 'run-release-stg / e2e');
            assert(e2e.state === 'success', `E2E status is ${status.state}`);

  cd:
    uses: ./.github/workflows/_sls_deploy.yml
    needs: validate-release
    with:
      ref: ${{ github.sha }}
      stage: dev
      notify: false
      release_semver: ${{ inputs.semver }}
    secrets:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  e2e:
    uses: ./.github/workflows/_e2e_tests.yml
    needs: cd
    with:
      ref: ${{ inputs.semver }}
      stage: dev
      notify: false
    secrets:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
