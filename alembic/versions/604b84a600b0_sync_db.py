"""sync db

Revision ID: 604b84a600b0
Revises: 03b149d9688c
Create Date: 2024-05-07 15:19:54.262448

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "604b84a600b0"
down_revision: Union[str, None] = "03b149d9688c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("addresses_id_key", "addresses", type_="unique")
    op.drop_constraint("order_items_id_key", "order_items", type_="unique")
    op.drop_constraint("orders_id_key", "orders", type_="unique")
    op.drop_constraint("products_id_key", "products", type_="unique")
    op.drop_constraint("rma_items_id_key", "rma_items", type_="unique")
    op.alter_column("users", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint("users_id_key", "users", type_="unique")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("users_id_key", "users", ["id"])
    op.alter_column("users", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.create_unique_constraint("rma_items_id_key", "rma_items", ["id"])
    op.create_unique_constraint("products_id_key", "products", ["id"])
    op.create_unique_constraint("orders_id_key", "orders", ["id"])
    op.create_unique_constraint("order_items_id_key", "order_items", ["id"])
    op.create_unique_constraint("addresses_id_key", "addresses", ["id"])
    # ### end Alembic commands ###
