"""remove old columns

Revision ID: 9577d0b2d7d8
Revises: 81fce49af6f4
Create Date: 2024-05-07 18:57:26.577342

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9577d0b2d7d8"
down_revision: Union[str, None] = "81fce49af6f4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "rma_items", "type2", existing_type=postgresql.ENUM("REFUND", "EXCHANGE", name="rmaitemtype2"), nullable=False
    )
    op.alter_column(
        "rmas",
        "status2",
        existing_type=postgresql.ENUM(
            "PENDING", "PENDING_CS_ACTION", "WAREHOUSE_COMPLETE", "COMPLETED", name="rmastatus2"
        ),
        nullable=False,
    )
    op.drop_column("rmas", "status")
    op.drop_column("rma_items", "type")
    op.drop_column("rma_items", "reason")
    op.execute("DROP TYPE rmastatus;")
    op.execute("DROP TYPE rmaitemtype;")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "rmas",
        sa.Column(
            "status",
            postgresql.ENUM("PENDING", "RECEIVED", "RESTOCKED", "CLOSED", name="rmastatus"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.alter_column(
        "rmas",
        "status2",
        existing_type=postgresql.ENUM(
            "PENDING", "PENDING_CS_ACTION", "WAREHOUSE_COMPLETE", "COMPLETED", name="rmastatus2"
        ),
        nullable=True,
    )
    op.add_column("rma_items", sa.Column("reason", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(
        "rma_items",
        sa.Column(
            "type",
            postgresql.ENUM("DISLIKED", "TOO_BIG", "TOO_SMALL", "DAMAGED", "WRONG_ITEM", name="rmaitemtype"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.alter_column(
        "rma_items", "type2", existing_type=postgresql.ENUM("REFUND", "EXCHANGE", name="rmaitemtype2"), nullable=True
    )
    # ### end Alembic commands ###
