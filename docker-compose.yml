services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tmg
    ports:
      - "5432:5432"
    command: "-c log_statement=all"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  test-integration:
    image: python:3.12
    volumes:
      - .:/usr/src/app
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: tmg
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_POOL_SIZE: 100
      TMG_APP_TESTING: 'true'
    working_dir: /usr/src/app/
    command: >
      bash -c "pip install tox &&
      git config --global --add safe.directory /usr/src/app &&
      tox &&
      . .tox/tmg-dev/bin/activate && 
      pip install --upgrade psycopg2 &&
      ./scripts/reset_db.sh &&
      cd server/tests/integration/ &&
      pytest --verbose"
    depends_on:
      - db

  app:
    image: python:3.12
    volumes:
      - .:/usr/src/app
    environment:
      API_TOKEN: Test123
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: tmg
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_POOL_SIZE: 100
      TMG_APP_TESTING: 'true'
    working_dir: /usr/src/app/
    ports:
      - "8080:8080"
    command: >
      bash -c "pip install -r requirements.txt &&
      pip install --upgrade psycopg2 &&
      ./scripts/reset_db.sh &&
      python main.py"
    depends_on:
      - db

  smoke-test:
    image: python:3.12
    command: >
      bash -c "
      echo 'Waiting for up to 45 sec for app to start ...' &&
      timeout 45 bash -c \"while ! curl -s -o /dev/null -H 'X-Api-Access-Token: Test123' -w '%{http_code}' 'http://app:8080/health' | grep -q 200; do
        sleep 1;
      done\""
    depends_on:
      - db
      - app

  test-e2e:
    image: mcr.microsoft.com/playwright/python:latest
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app/server/tests/e2e/
    environment:
      PYTHONUNBUFFERED: 1
      ACTIVE_ENV: ${ACTIVE_ENV:-stg}
      BROWSER: ${BROWSER:-chromium}
    command: >
      bash -c "pip install pytest pytest-playwright pytest-rerunfailures &&
      pytest --verbose --browser $BROWSER --reruns 2"
    deploy:
      replicas: ${LOAD:-1}
    tty: false
    restart: "no"

volumes:
  postgres_data:
