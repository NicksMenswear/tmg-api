# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class OrderItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catalog_item_id=None, quantity=None, price=None):  # noqa: E501
        """OrderItem - a model defined in OpenAPI

        :param catalog_item_id: The catalog_item_id of this OrderItem.  # noqa: E501
        :type catalog_item_id: int
        :param quantity: The quantity of this OrderItem.  # noqa: E501
        :type quantity: int
        :param price: The price of this OrderItem.  # noqa: E501
        :type price: float
        """
        self.openapi_types = {
            'catalog_item_id': int,
            'quantity': int,
            'price': float
        }

        self.attribute_map = {
            'catalog_item_id': 'catalog_item_id',
            'quantity': 'quantity',
            'price': 'price'
        }

        self._catalog_item_id = catalog_item_id
        self._quantity = quantity
        self._price = price

    @classmethod
    def from_dict(cls, dikt) -> 'OrderItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderItem of this OrderItem.  # noqa: E501
        :rtype: OrderItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catalog_item_id(self):
        """Gets the catalog_item_id of this OrderItem.


        :return: The catalog_item_id of this OrderItem.
        :rtype: int
        """
        return self._catalog_item_id

    @catalog_item_id.setter
    def catalog_item_id(self, catalog_item_id):
        """Sets the catalog_item_id of this OrderItem.


        :param catalog_item_id: The catalog_item_id of this OrderItem.
        :type catalog_item_id: int
        """

        self._catalog_item_id = catalog_item_id

    @property
    def quantity(self):
        """Gets the quantity of this OrderItem.


        :return: The quantity of this OrderItem.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this OrderItem.


        :param quantity: The quantity of this OrderItem.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def price(self):
        """Gets the price of this OrderItem.


        :return: The price of this OrderItem.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this OrderItem.


        :param price: The price of this OrderItem.
        :type price: float
        """

        self._price = price
