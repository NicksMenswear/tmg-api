service: tmg-api
provider:
  name: aws
  runtime: python3.10
  stage: dev
  region: us-west-2
  iam:
    role:
      name: tmg-api-${sls:stage}-role
  logs:
    restApi:
      accessLogging: true
      format: '$context.requestTime "$context.httpMethod $context.path $context.protocol" $context.status $context.identity.sourceIp $context.requestId'

functions:
  api:
    handler: openapi_server.app.lambda_handler
    module: server
    events:
      - http: ANY /
      - http: ANY /{proxy+}
    provisionedConcurrency: 1
    reservedConcurrency: 10
    timeout: 3
    vpc:
      securityGroupIds:
        - sg-0649f5114f8fdde15
      subnetIds:
        - subnet-0558d5c84f76f6246
        - subnet-081fa5d80ecd9a253
    environment:
      # SQLAlchemy Env Variables
      DB_HOST: tmg-api-db-01.cfbqizbq9cdk.us-west-2.rds.amazonaws.com
      DB_PORT: 5432
      DB_NAME: tmg_api
      DB_USER: postgres
      DB_PASSWORD: ${ssm:/db/tmg-api-db/DB_PASSWORD}
      # Shopify Env Variables
      API_KEY: ${ssm:/shopify/c2/API_KEY}
      sender_email: "bsit833@gmail.com"
      sender_password: ${ssm:/shopify/c2/sender_password}
      api_version: "2024-01"
      shopify_store: "themodern-groom"
      client_id: ${ssm:/shopify/c2/client_id}
      client_secret: ${ssm:/shopify/c2/client_secret}
      SECRET_KEY_C2: ${ssm:/shopify/c2/client_secret}
      admin_api_access_token: ${ssm:/shopify/c2/admin_api_access_token}

plugins:
  - serverless-python-requirements
  - serverless-domain-manager

custom:
  customDomain:
    domainName: "api.dev.tmgcorp.net"
    basePath: ''
    certificateName: '*.dev.tmgcorp.net'
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: false

package:
  individually: true
  exclude:
    - .serverless/**
    - .tox/**
    - ./**/.tox/**
    - ./**/build/**
    - .git/**
    - '**/*.jar'
    - node_modules/**
    - venv/**
    - doc/**
    - "**/__pycache__/**"
    - "**/__pycache__"
    - ".#*"