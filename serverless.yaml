service: tmg-api
provider:
  name: aws
  runtime: python3.10
  stage: ${opt:stage, "dev"}
  region: us-west-2
  iam:
    role:
      name: tmg-api-${sls:stage}-role
  logs:
    restApi:
      accessLogging: true
      format: '$context.requestTime "$context.httpMethod $context.path $context.protocol" $context.status $context.identity.sourceIp $context.requestId'

functions:
  api:
    handler: main.lambda_handler
    events:
      - http: ANY /
      - http: ANY /{proxy+}
    provisionedConcurrency: 10
    reservedConcurrency: 100
    timeout: 10
    memorySize: 256
    vpc:
      securityGroupIds:
        - sg-0649f5114f8fdde15
      subnetIds:
        - subnet-0558d5c84f76f6246
        - subnet-081fa5d80ecd9a253
    environment:
      # General
      STAGE: ${sls:stage}
      # SQLAlchemy Env Variables
      DB_HOST: ${ssm:/${sls:stage}/db/DB_HOST}
      DB_PORT: 5432
      DB_NAME: ${ssm:/${sls:stage}/db/DB_NAME}
      DB_USER: ${ssm:/${sls:stage}/db/DB_USER}
      DB_PASSWORD: ${ssm:/${sls:stage}/db/DB_PASSWORD}
      # Shopify Env Variables
      API_KEY: ${ssm:/shopify/c2/API_KEY}
      sender_email: "bsit833@gmail.com"
      sender_password: ${ssm:/shopify/c2/sender_password}
      api_version: "2024-01"
      shopify_store: "themodern-groom"
      client_id: ${ssm:/shopify/c2/client_id}
      client_secret: ${ssm:/shopify/c2/client_secret}
      SECRET_KEY_C2: ${ssm:/shopify/c2/client_secret}
      admin_api_access_token: ${ssm:/shopify/c2/admin_api_access_token}

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-plugin-datadog

custom:
  # https://github.com/amplify-education/serverless-domain-manager/tree/main 
  customDomain:
    domainName: "api.${sls:stage}.tmgcorp.net"
    basePath: ''
    certificateName: '*.${sls:stage}.tmgcorp.net'
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: true

  datadog_profiler: false

  # https://docs.datadoghq.com/serverless/libraries_integrations/plugin/
  datadog:
    enabled: true
    site: us5.datadoghq.com
    apiKey: ${ssm:/sls/datadog/api_key}
    appKey: ${ssm:/sls/datadog/app_key}
    failOnError: true
    logLevel: DEBUG
    env: ${sls:stage}
    service: tmg-api
    subdomain: "api.${sls:stage}.tmgcorp.net"
    redirectHandlers: ${self:custom.datadog_profiler}
    enableDDLogs: ${self:custom.datadog_profiler}
    enableXrayTracing: ${self:custom.datadog_profiler}
    enableDDTracing: ${self:custom.datadog_profiler}
    enableProfiling: false
    enableSourceCodeIntegration: false
    uploadGitMetadata: false
    enableColdStartTracing: ${self:custom.datadog_profiler}
    addLayers: ${self:custom.datadog_profiler}
    addExtension: ${self:custom.datadog_profiler}
    captureLambdaPayload: ${self:custom.datadog_profiler}
    encodeAuthorizerContext: false
    decodeAuthorizerContext: false
    subscribeToAccessLogs: true
    subscribeToExecutionLogs: true
    forwarderArn: arn:aws:lambda:us-west-2:828867313984:function:DatadogIntegration-ForwarderStack-AS2SOT-Forwarder-GHUaejGvjpIq
    # https://docs.datadoghq.com/serverless/libraries_integrations/plugin/#serverless-monitors
    monitors:
      - high_error_rate:
          name: "High Error Rate on {{functionname}}"
          message: "More than 10% of the function's invocations are errors. Notify @slack-notifications"
          options:
            include_tags: false
      - high_throttles:
          name: "High Throttles on {{functionname}}"
          message: "More than 20% of the function's invocations are throttled. Notify @slack-notifications"
          options:
            include_tags: false

package:
  exclude:
    - .serverless/**
    - .tox/**
    - .build/**
    - .git/**
    - '.vscode/**'
    - node_modules/**
    - venv/**
    - doc/**
    - "__pycache__/**"
    - "**/__pycache__/**"
    - ".#*"